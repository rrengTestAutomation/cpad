<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="0" total="2" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="test-single" duration-ms="40" started-at="2016-11-16T21:40:11Z" finished-at="2016-11-16T21:40:11Z">
    <groups>
      <group name="US-37479">
        <method signature="Programs.testCreatedOnDateOrderIsAscendingForProgramsByGroupOfKids()[pri:0, instance:test.Cases.Programs@134affc]" name="testCreatedOnDateOrderIsAscendingForProgramsByGroupOfKids" class="test.Cases.Programs"/>
        <method signature="Programs.testCreatedOnDateOrderIsDescendingForProgramsByGroupOfKids()[pri:0, instance:test.Cases.Programs@134affc]" name="testCreatedOnDateOrderIsDescendingForProgramsByGroupOfKids" class="test.Cases.Programs"/>
      </group> <!-- US-37479 -->
    </groups>
    <test name="test-single" duration-ms="40" started-at="2016-11-16T21:40:11Z" finished-at="2016-11-16T21:40:11Z">
      <class name="test.Report.Log">
        <test-method status="FAIL" signature="logOpen()[pri:0, instance:test.Report.Log@1c36524]" name="logOpen" is-config="true" duration-ms="0" started-at="2016-11-16T16:40:11Z" finished-at="2016-11-16T16:40:11Z">
          <exception class="java.lang.ExceptionInInitializerError">
            <full-stacktrace>
              <![CDATA[java.lang.ExceptionInInitializerError
	at test.helper.Functions.fileExist(Functions.java:234)
	at test.helper.Functions.fileCleaner(Functions.java:2219)
	at test.Report.Log.logOpen(Log.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:277)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
Caused by: java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(Unknown Source)
	at test.common.Locators.<clinit>(Locators.java:14)
	... 21 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ExceptionInInitializerError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOpen -->
        <test-method status="SKIP" signature="logClose()[pri:0, instance:test.Report.Log@1c36524]" name="logClose" is-config="true" duration-ms="0" started-at="2016-11-16T16:40:11Z" finished-at="2016-11-16T16:40:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logClose -->
      </class> <!-- test.Report.Log -->
      <class name="test.Cases.Programs">
        <test-method status="SKIP" signature="endTime()[pri:0, instance:test.Cases.Programs@134affc]" name="endTime" is-config="true" duration-ms="0" started-at="2016-11-16T16:40:11Z" finished-at="2016-11-16T16:40:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTime -->
        <test-method status="SKIP" signature="startTime()[pri:0, instance:test.Cases.Programs@134affc]" name="startTime" is-config="true" duration-ms="0" started-at="2016-11-16T16:40:11Z" finished-at="2016-11-16T16:40:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTime -->
        <test-method status="SKIP" signature="testCreatedOnDateOrderIsAscendingForProgramsByGroupOfKids()[pri:0, instance:test.Cases.Programs@134affc]" name="testCreatedOnDateOrderIsAscendingForProgramsByGroupOfKids" duration-ms="0" started-at="2016-11-16T16:40:11Z" finished-at="2016-11-16T16:40:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreatedOnDateOrderIsAscendingForProgramsByGroupOfKids -->
        <test-method status="SKIP" signature="startTime()[pri:0, instance:test.Cases.Programs@134affc]" name="startTime" is-config="true" duration-ms="0" started-at="2016-11-16T16:40:11Z" finished-at="2016-11-16T16:40:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTime -->
        <test-method status="SKIP" signature="testCreatedOnDateOrderIsDescendingForProgramsByGroupOfKids()[pri:0, instance:test.Cases.Programs@134affc]" name="testCreatedOnDateOrderIsDescendingForProgramsByGroupOfKids" duration-ms="0" started-at="2016-11-16T16:40:11Z" finished-at="2016-11-16T16:40:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreatedOnDateOrderIsDescendingForProgramsByGroupOfKids -->
        <test-method status="SKIP" signature="endTime()[pri:0, instance:test.Cases.Programs@134affc]" name="endTime" is-config="true" duration-ms="0" started-at="2016-11-16T16:40:11Z" finished-at="2016-11-16T16:40:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTime -->
      </class> <!-- test.Cases.Programs -->
    </test> <!-- test-single -->
  </suite> <!-- test-single -->
</testng-results>
